{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x876Ba90d60EEB59D19fE704823fB5c85e0Cb408C",
    "txHash": "0xe79f251fac34ceda611b3a96b6b8d5917922d2c81469cd9f68274cf411611436"
  },
  "proxies": [
    {
      "address": "0x2f31F7bFbAd1e61035B64CB97190fCE3E15bb93F",
      "txHash": "0x99fa95544ccf384bb3ff081a9d5d29fc4c40b50b38f75fc00ccf6ddf667398fc",
      "kind": "transparent"
    },
    {
      "address": "0x30E00Dfde78F09d73fB2aB4E1f12Ead930aC6401",
      "txHash": "0x6a123c29f7bc890d1ef9bbbe3a627c0107cd78b28d4b0a88f271da273bde393f",
      "kind": "transparent"
    },
    {
      "address": "0x4C04662FAF1853bD7421f045879B0dbE1063C1b3",
      "txHash": "0x24d53ac7266b003abaf66cfc008f168ec2ac7ee69ecf2ae2fc8a45d2d05ac554",
      "kind": "transparent"
    },
    {
      "address": "0xFe57f79ab7f17F68c61d9B0213005CAAa5Bc2917",
      "txHash": "0xe83b5aa3ea67384dc1abc89df08d5def6ef07852cd809bbd4c22f247a77b3b8f",
      "kind": "transparent"
    },
    {
      "address": "0x872226613cEfE51dA609D9478a81D4fffe02985e",
      "txHash": "0x0a1365d5172fc3f3ea2a0672658f289a12a8019f9d2fd77f5210d732c77de592",
      "kind": "transparent"
    },
    {
      "address": "0x5C1Cd8b7baD53Cb4316202F16191833440243e54",
      "txHash": "0xa9869be7caa248abf342d38ba6307f406bb311bac4900df7d79c32b1acdd9e03",
      "kind": "transparent"
    },
    {
      "address": "0x9aEF70a1A419B9Acd0a80F76684c4D284C0c1Fa8",
      "txHash": "0x5b4839c82e8b03a4f39f9bbf4e1b7c5cbabd3b69bf10a85ecb803073a8948f09",
      "kind": "transparent"
    },
    {
      "address": "0x866Fa14D72967BC0b4B40Be089992D7ca9471d97",
      "txHash": "0x914019deb6fc7ae735b9f75b9089cd475fd30111afa6364d96cff5a17c0c9391",
      "kind": "transparent"
    },
    {
      "address": "0x4d57Af33104f31F00508ef714F57b7da58dE7571",
      "txHash": "0x60d48f227c6c4174f6c345de287aaea5fabb08326713ed4eccd1013653af762e",
      "kind": "transparent"
    },
    {
      "address": "0xA91bd3c99268C820b990c607ba634D29f8430D0B",
      "txHash": "0xb0ab5203f10604b1a0b46f2bb54ab302ae3bfe835122e2dfa063341697cfa583",
      "kind": "transparent"
    },
    {
      "address": "0x35c1ca3eB294C51D5ae31e3D68B998173FB8b387",
      "txHash": "0xd13922abf9b4a0bc4c74b4dcc05faf4a8088df4c0e0688155b13bd41621cf21e",
      "kind": "transparent"
    },
    {
      "address": "0xC34D5DF4952e12Bd29Edf8755eF56a684957A221",
      "txHash": "0x466414696e140eaf2470b84a8e38a61d1defd6df2ed4a72afb7d921a4e81fde7",
      "kind": "transparent"
    },
    {
      "address": "0x4c3B918054dC2bA4C619A018A675c2B83F09981E",
      "txHash": "0x374344c085a17dcb2b300445edeceff7cec09ce012513be2dba83843bbd36f5d",
      "kind": "transparent"
    },
    {
      "address": "0x908b7De1748f1d529bcF11AF9B2D526bFeEb6d78",
      "txHash": "0xf904cc36a406fa9089a0c1175b82a1c94f56ea737e84d8e4d9dc382c157c6598",
      "kind": "transparent"
    },
    {
      "address": "0xCB339e0f370095F67785486522650827DcB7b979",
      "txHash": "0xd87ccda2c1e517de96bfb069b76d89e37729c4665b6cdf5cec995a99eb7cf614",
      "kind": "transparent"
    },
    {
      "address": "0x6b2EF0533Db93828D26a9C20B6C0eB0e132056c0",
      "txHash": "0x4de170307fc0b9fbdf00d2aae7b11c262917d00ee8fab37eaeada67993ced5d4",
      "kind": "transparent"
    },
    {
      "address": "0x625f3480dDA2f263CD9B37a245e8005a41F06557",
      "txHash": "0x07569692940310c5301210609b25c450d38ca047fccab5154e1624e86531311b",
      "kind": "transparent"
    },
    {
      "address": "0xCb42f561769b4a29B834Bef337E90504adb2313c",
      "txHash": "0xcc05f9aabb91d9c603651df5bf3fa40d060930b4553f59baeca704c2c2fd942d",
      "kind": "transparent"
    },
    {
      "address": "0x8177Cf7334FDC80C04499C0DFAe53Fc3Ce1d47fb",
      "txHash": "0xf8e0190da1f883d2ec9f530c8af6727d01f25ae3f82af348822237171d717de3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "376fd2d516e0b5d6266528cb7e16ec6b3dce3da97234386ff6acda5c12cfe507": {
      "address": "0x4A4c1d848df06FD4B3C76b1dD362Bc93EbD45A3B",
      "txHash": "0xea65e9b26ed412c8c054df1305a969bc6e2a08b39c9a4fe5390b247836207f1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Village",
            "label": "cbkLand",
            "type": "t_contract(CBKLandInterface)4822",
            "src": "..\\project:\\contracts\\Village.sol:13"
          },
          {
            "contract": "Village",
            "label": "stakedLand",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:15"
          },
          {
            "contract": "Village",
            "label": "stakedFrom",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:16"
          },
          {
            "contract": "Village",
            "label": "stakedTo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:17"
          },
          {
            "contract": "Village",
            "label": "buildings",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Building)3984,t_uint256))",
            "src": "..\\project:\\contracts\\Village.sol:18"
          },
          {
            "contract": "Village",
            "label": "currentlyUpgrading",
            "type": "t_mapping(t_uint256,t_struct(BuildingUpgrade)3990_storage)",
            "src": "..\\project:\\contracts\\Village.sol:19"
          },
          {
            "contract": "Village",
            "label": "buildingMaxLevel",
            "type": "t_mapping(t_enum(Building)3984,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:20"
          },
          {
            "contract": "Village",
            "label": "buildingRequirement",
            "type": "t_mapping(t_enum(Building)3984,t_struct(BuildingRequirement)3996_storage)",
            "src": "..\\project:\\contracts\\Village.sol:21"
          }
        ],
        "types": {
          "t_contract(CBKLandInterface)4822": {
            "label": "contract CBKLandInterface"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Building)3984,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Village.Building => uint256))"
          },
          "t_mapping(t_enum(Building)3984,t_uint256)": {
            "label": "mapping(enum Village.Building => uint256)"
          },
          "t_enum(Building)3984": {
            "label": "enum Village.Building",
            "members": [
              "NONE",
              "TOWN_HALL",
              "HEADQUARTERS",
              "BARRACKS",
              "CLAY_PIT",
              "FOREST_CAMP",
              "STONE_MINE",
              "STOREHOUSE",
              "SMITHY",
              "FARM",
              "HIDDEN_STASH",
              "WALL",
              "MARKET"
            ]
          },
          "t_mapping(t_uint256,t_struct(BuildingUpgrade)3990_storage)": {
            "label": "mapping(uint256 => struct Village.BuildingUpgrade)"
          },
          "t_struct(BuildingUpgrade)3990_storage": {
            "label": "struct Village.BuildingUpgrade",
            "members": [
              {
                "label": "building",
                "type": "t_enum(Building)3984"
              },
              {
                "label": "finishTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_enum(Building)3984,t_struct(BuildingRequirement)3996_storage)": {
            "label": "mapping(enum Village.Building => struct Village.BuildingRequirement)"
          },
          "t_struct(BuildingRequirement)3996_storage": {
            "label": "struct Village.BuildingRequirement",
            "members": [
              {
                "label": "building",
                "type": "t_enum(Building)3984"
              },
              {
                "label": "level",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8671fb32c151441ecda5323433c0b0a38e0a74881a150d715488a380cda4d6d": {
      "address": "0x65284Da98A9c1f17818Da5BCc36F60F06FeaE628",
      "txHash": "0x682418c43f4f0d25159d2c096bb9fe265e8f3d6ea746b5cb9087a976c177fb79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "KingVault",
            "label": "kingToken",
            "type": "t_contract(KingToken)2808",
            "src": "..\\project:\\contracts\\KingVault.sol:14"
          },
          {
            "contract": "KingVault",
            "label": "vaults",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\KingVault.sol:16"
          },
          {
            "contract": "KingVault",
            "label": "claimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\KingVault.sol:17"
          }
        ],
        "types": {
          "t_contract(KingToken)2808": {
            "label": "contract KingToken"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "544546893d6342deaa1aca778c33dc8f80c82eba7511d02df167fa720fcaf22e": {
      "address": "0x53FcCaF65279118409E9359DC3008DBDf63656Fe",
      "txHash": "0x26e1e581d1a79016f1bb1532375f66bd477b0e4ded4d4f971fd1f6e24b34797b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4598",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3561_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "NftStaking",
            "label": "nft",
            "type": "t_contract(IERC721EnumerableUpgradeable)724",
            "src": "..\\project:\\contracts\\NftStaking.sol:11"
          },
          {
            "contract": "NftStaking",
            "label": "stakedNfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\NftStaking.sol:13"
          }
        ],
        "types": {
          "t_contract(IERC721EnumerableUpgradeable)724": {
            "label": "contract IERC721EnumerableUpgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Village)4598": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3561_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3561_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c169af9c3e0e7979a6a8ceddf75b72e2d30743fc1c146c53681fc985c0aa08f6": {
      "address": "0x115455FBAb6248F430d7d2695c0255D55C81Cd53",
      "txHash": "0xcb452fd65d3b72a7cd3e1779088ffe05ac613659e3cb9cb6ea6eda3bbc24c56e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4598",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3561_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "NftStaking",
            "label": "nft",
            "type": "t_contract(IERC721EnumerableUpgradeable)724",
            "src": "..\\project:\\contracts\\NftStaking.sol:11"
          },
          {
            "contract": "NftStaking",
            "label": "stakedNfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\NftStaking.sol:13"
          },
          {
            "contract": "WeaponStaking",
            "label": "characterStaking",
            "type": "t_contract(CharacterStaking)2370",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:11"
          },
          {
            "contract": "WeaponStaking",
            "label": "kingVault",
            "type": "t_contract(KingVault)2951",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:12"
          },
          {
            "contract": "WeaponStaking",
            "label": "kingRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:14"
          }
        ],
        "types": {
          "t_contract(CharacterStaking)2370": {
            "label": "contract CharacterStaking"
          },
          "t_contract(KingVault)2951": {
            "label": "contract KingVault"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC721EnumerableUpgradeable)724": {
            "label": "contract IERC721EnumerableUpgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(Village)4598": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3561_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3561_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0c2d7af25074799cf671beead9b70c217b0993da6dc79cea9dc4d8e0060de14": {
      "address": "0x51E28943d3F68062C3c1bad253E0e133f91F7555",
      "txHash": "0x6ca18fd4be732c4ac77571831eeea40d2037af383a169e3cce4df7df854cc7c1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4598",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3561_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "CurrencyStaking",
            "label": "currency",
            "type": "t_contract(IERC20Upgradeable)559",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:11"
          },
          {
            "contract": "CurrencyStaking",
            "label": "stakedCurrencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:13"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)559": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Village)4598": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3561_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3561_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "082c6b9bc3af0704452126620b6dbf2ac273c5fd6345566dfa55de534362406f": {
      "address": "0x7710a1F1d14A3f7DeF443FE695421e9e2fc8b8Ab",
      "txHash": "0xe1ad5ca0a952ca83dfffa9e66fa0a0f01530844294a469b9c3046238cb1580cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4598",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3561_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "CurrencyStaking",
            "label": "currency",
            "type": "t_contract(IERC20Upgradeable)559",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:11"
          },
          {
            "contract": "CurrencyStaking",
            "label": "stakedCurrencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:13"
          },
          {
            "contract": "SkillStaking",
            "label": "kingStaking",
            "type": "t_contract(KingStaking)2766",
            "src": "..\\project:\\contracts\\SkillStaking.sol:11"
          },
          {
            "contract": "SkillStaking",
            "label": "kingVault",
            "type": "t_contract(KingVault)2951",
            "src": "..\\project:\\contracts\\SkillStaking.sol:12"
          },
          {
            "contract": "SkillStaking",
            "label": "kingRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\SkillStaking.sol:14"
          }
        ],
        "types": {
          "t_contract(KingStaking)2766": {
            "label": "contract KingStaking"
          },
          "t_contract(KingVault)2951": {
            "label": "contract KingVault"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)559": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Village)4598": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3561_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3561_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f73af5494c34b2dd2e816dce576db82a908e55f1eb7f7487ef84433a5d94cf9": {
      "address": "0xA7B7515a3CBB7c59CEd58724c3309b79AeaAE9f5",
      "txHash": "0x3709622f1ae304397858cd7e4576d3712eb28b7baab0e59f4bf851a78a2cc9de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Village",
            "label": "cbkLand",
            "type": "t_contract(CBKLandInterface)4847",
            "src": "..\\project:\\contracts\\Village.sol:13"
          },
          {
            "contract": "Village",
            "label": "stakedLand",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:15"
          },
          {
            "contract": "Village",
            "label": "stakedFrom",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:16"
          },
          {
            "contract": "Village",
            "label": "stakedTo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:17"
          },
          {
            "contract": "Village",
            "label": "buildings",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Building)3979,t_uint256))",
            "src": "..\\project:\\contracts\\Village.sol:18"
          },
          {
            "contract": "Village",
            "label": "currentlyUpgrading",
            "type": "t_mapping(t_uint256,t_struct(BuildingUpgrade)3985_storage)",
            "src": "..\\project:\\contracts\\Village.sol:19"
          },
          {
            "contract": "Village",
            "label": "buildingMaxLevel",
            "type": "t_mapping(t_enum(Building)3979,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:20"
          },
          {
            "contract": "Village",
            "label": "buildingRequirement",
            "type": "t_mapping(t_enum(Building)3979,t_struct(BuildingRequirement)3991_storage)",
            "src": "..\\project:\\contracts\\Village.sol:21"
          }
        ],
        "types": {
          "t_contract(CBKLandInterface)4847": {
            "label": "contract CBKLandInterface"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Building)3979,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Village.Building => uint256))"
          },
          "t_mapping(t_enum(Building)3979,t_uint256)": {
            "label": "mapping(enum Village.Building => uint256)"
          },
          "t_enum(Building)3979": {
            "label": "enum Village.Building",
            "members": [
              "NONE",
              "TOWN_HALL",
              "HEADQUARTERS",
              "BARRACKS",
              "CLAY_PIT",
              "FOREST_CAMP",
              "STONE_MINE",
              "STOREHOUSE",
              "SMITHY",
              "FARM",
              "HIDDEN_STASH",
              "WALL",
              "MARKET"
            ]
          },
          "t_mapping(t_uint256,t_struct(BuildingUpgrade)3985_storage)": {
            "label": "mapping(uint256 => struct Village.BuildingUpgrade)"
          },
          "t_struct(BuildingUpgrade)3985_storage": {
            "label": "struct Village.BuildingUpgrade",
            "members": [
              {
                "label": "building",
                "type": "t_enum(Building)3979"
              },
              {
                "label": "finishTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_enum(Building)3979,t_struct(BuildingRequirement)3991_storage)": {
            "label": "mapping(enum Village.Building => struct Village.BuildingRequirement)"
          },
          "t_struct(BuildingRequirement)3991_storage": {
            "label": "struct Village.BuildingRequirement",
            "members": [
              {
                "label": "building",
                "type": "t_enum(Building)3979"
              },
              {
                "label": "level",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "16de7997dadbb9766b9bea50ab45d38fac5f635fa31e135c6ede7989d9c0e9e5": {
      "address": "0x3AE6A71A115C24c5d9cFe41F53f6F9D91A3D8FD7",
      "txHash": "0xe615314e274def90d01d17b766eb469d470858d2b521b38ed7a18b9275bcf402",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4621",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3556_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "NftStaking",
            "label": "nft",
            "type": "t_contract(IERC721EnumerableUpgradeable)724",
            "src": "..\\project:\\contracts\\NftStaking.sol:11"
          },
          {
            "contract": "NftStaking",
            "label": "stakedNfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\NftStaking.sol:13"
          }
        ],
        "types": {
          "t_contract(IERC721EnumerableUpgradeable)724": {
            "label": "contract IERC721EnumerableUpgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Village)4621": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3556_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3556_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d217a62e41bc5f28f2c282614ae058ee7842815b98bd21520c35e54cee4ef815": {
      "address": "0x60143e01e017A2b8dF47EC62F34911E33c597775",
      "txHash": "0xe39ac4235a2b1a5cd3d62a2767480aa4c8424fb7c180d8743e5d578d5a43425c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4621",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3556_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "NftStaking",
            "label": "nft",
            "type": "t_contract(IERC721EnumerableUpgradeable)724",
            "src": "..\\project:\\contracts\\NftStaking.sol:11"
          },
          {
            "contract": "NftStaking",
            "label": "stakedNfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\NftStaking.sol:13"
          },
          {
            "contract": "WeaponStaking",
            "label": "characterStaking",
            "type": "t_contract(CharacterStaking)2363",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:11"
          },
          {
            "contract": "WeaponStaking",
            "label": "kingVault",
            "type": "t_contract(KingVault)2944",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:12"
          },
          {
            "contract": "WeaponStaking",
            "label": "kingRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:14"
          }
        ],
        "types": {
          "t_contract(CharacterStaking)2363": {
            "label": "contract CharacterStaking"
          },
          "t_contract(KingVault)2944": {
            "label": "contract KingVault"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC721EnumerableUpgradeable)724": {
            "label": "contract IERC721EnumerableUpgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(Village)4621": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3556_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3556_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93f9aba1d455effaeee1c60fb174825b3ff01acf64e8c29df93f076a49de5c89": {
      "address": "0xb5FF628719E9E028817E270f6296F9A307BF1d7A",
      "txHash": "0xd18a671425f3a1fa35f772d2318e5d899e91dac74c149004739e684fdd878c86",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4621",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3556_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "CurrencyStaking",
            "label": "currency",
            "type": "t_contract(IERC20Upgradeable)559",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:11"
          },
          {
            "contract": "CurrencyStaking",
            "label": "stakedCurrencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:13"
          },
          {
            "contract": "SkillStaking",
            "label": "kingStaking",
            "type": "t_contract(KingStaking)2759",
            "src": "..\\project:\\contracts\\SkillStaking.sol:11"
          },
          {
            "contract": "SkillStaking",
            "label": "kingVault",
            "type": "t_contract(KingVault)2944",
            "src": "..\\project:\\contracts\\SkillStaking.sol:12"
          },
          {
            "contract": "SkillStaking",
            "label": "kingRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\SkillStaking.sol:14"
          }
        ],
        "types": {
          "t_contract(KingStaking)2759": {
            "label": "contract KingStaking"
          },
          "t_contract(KingVault)2944": {
            "label": "contract KingVault"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)559": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Village)4621": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3556_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3556_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ada00e651ab05ae3a7f0cd1ca11bd7b6bb3e1ff1469f79ec16c7f6fb78abf819": {
      "address": "0xf04ecf745e8d0f7C96e47cca694911500e817D39",
      "txHash": "0x3c74da04adbf440d1b76bc8caa42095ff960a7ce9bea457d12140458e12e1433",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Village",
            "label": "cbkLand",
            "type": "t_contract(CBKLandInterface)4416",
            "src": "..\\project:\\contracts\\Village.sol:13"
          },
          {
            "contract": "Village",
            "label": "stakedLand",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:15"
          },
          {
            "contract": "Village",
            "label": "stakedFrom",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:16"
          },
          {
            "contract": "Village",
            "label": "stakedTo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:17"
          },
          {
            "contract": "Village",
            "label": "buildings",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Building)3647,t_uint256))",
            "src": "..\\project:\\contracts\\Village.sol:18"
          },
          {
            "contract": "Village",
            "label": "currentlyUpgrading",
            "type": "t_mapping(t_uint256,t_struct(BuildingUpgrade)3653_storage)",
            "src": "..\\project:\\contracts\\Village.sol:19"
          },
          {
            "contract": "Village",
            "label": "buildingMaxLevel",
            "type": "t_mapping(t_enum(Building)3647,t_uint256)",
            "src": "..\\project:\\contracts\\Village.sol:20"
          },
          {
            "contract": "Village",
            "label": "buildingRequirement",
            "type": "t_mapping(t_enum(Building)3647,t_struct(BuildingRequirement)3659_storage)",
            "src": "..\\project:\\contracts\\Village.sol:21"
          }
        ],
        "types": {
          "t_contract(CBKLandInterface)4416": {
            "label": "contract CBKLandInterface"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Building)3647,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Village.Building => uint256))"
          },
          "t_mapping(t_enum(Building)3647,t_uint256)": {
            "label": "mapping(enum Village.Building => uint256)"
          },
          "t_enum(Building)3647": {
            "label": "enum Village.Building",
            "members": [
              "NONE",
              "TOWN_HALL",
              "HEADQUARTERS",
              "BARRACKS",
              "CLAY_PIT",
              "FOREST_CAMP",
              "STONE_MINE",
              "STOREHOUSE",
              "SMITHY",
              "FARM",
              "HIDDEN_STASH",
              "WALL",
              "MARKET"
            ]
          },
          "t_mapping(t_uint256,t_struct(BuildingUpgrade)3653_storage)": {
            "label": "mapping(uint256 => struct Village.BuildingUpgrade)"
          },
          "t_struct(BuildingUpgrade)3653_storage": {
            "label": "struct Village.BuildingUpgrade",
            "members": [
              {
                "label": "building",
                "type": "t_enum(Building)3647"
              },
              {
                "label": "finishTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_enum(Building)3647,t_struct(BuildingRequirement)3659_storage)": {
            "label": "mapping(enum Village.Building => struct Village.BuildingRequirement)"
          },
          "t_struct(BuildingRequirement)3659_storage": {
            "label": "struct Village.BuildingRequirement",
            "members": [
              {
                "label": "building",
                "type": "t_enum(Building)3647"
              },
              {
                "label": "level",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a73d2d2f75aded3d3dc8f8ea03d6f490a8e9b532dd039d3b757faba4420ab7c6": {
      "address": "0x8D5cA2e8C6015B829eaff51083329Da848C6d5c2",
      "txHash": "0xac1252e19573e076eb4fbb9b8190a52c34dc00c1cf75facb878bc58f2d0f8c5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "KingVault",
            "label": "kingToken",
            "type": "t_contract(KingToken)2489",
            "src": "..\\project:\\contracts\\KingVault.sol:12"
          },
          {
            "contract": "KingVault",
            "label": "vaults",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\KingVault.sol:14"
          },
          {
            "contract": "KingVault",
            "label": "claimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\KingVault.sol:15"
          }
        ],
        "types": {
          "t_contract(KingToken)2489": {
            "label": "contract KingToken"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e7c3f701f504921090771fe7fb4687884dac0590ed13fac52a785eb73a3b5923": {
      "address": "0x69FEDA0497c7b926F77CCC4d65e3F73484eB557F",
      "txHash": "0x521cee4279d78e9cc55bfdb218e86475ff63062695a9fe421afe5d0ed38b180a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4190",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3238_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "NftStaking",
            "label": "nft",
            "type": "t_contract(IERC721EnumerableUpgradeable)724",
            "src": "..\\project:\\contracts\\NftStaking.sol:11"
          },
          {
            "contract": "NftStaking",
            "label": "stakedNfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\NftStaking.sol:13"
          }
        ],
        "types": {
          "t_contract(IERC721EnumerableUpgradeable)724": {
            "label": "contract IERC721EnumerableUpgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Village)4190": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3238_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3238_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "944cda267262ad626459a998fff295731b2072cbc1c0aeb8c3d1276f19b853c9": {
      "address": "0x5BC3f1686cdb89485c32119E9B5b6d1AFd52d52c",
      "txHash": "0x96bae0025f6d1d64dcc1dd5edffb0417dbbd017267f04c37da14df5a366cb7f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4190",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3238_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "NftStaking",
            "label": "nft",
            "type": "t_contract(IERC721EnumerableUpgradeable)724",
            "src": "..\\project:\\contracts\\NftStaking.sol:11"
          },
          {
            "contract": "NftStaking",
            "label": "stakedNfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\NftStaking.sol:13"
          },
          {
            "contract": "WeaponStaking",
            "label": "characterStaking",
            "type": "t_contract(CharacterStaking)2051",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:11"
          },
          {
            "contract": "WeaponStaking",
            "label": "kingVault",
            "type": "t_contract(KingVault)2629",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:12"
          },
          {
            "contract": "WeaponStaking",
            "label": "kingRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\WeaponStaking.sol:14"
          }
        ],
        "types": {
          "t_contract(CharacterStaking)2051": {
            "label": "contract CharacterStaking"
          },
          "t_contract(KingVault)2629": {
            "label": "contract KingVault"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC721EnumerableUpgradeable)724": {
            "label": "contract IERC721EnumerableUpgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(Village)4190": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3238_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3238_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9658d1c26396ead540221926abac6a13f36070e070d362d6e9147d2386a18152": {
      "address": "0x3fC1D9D8e57faa99805D6A10072cbB12281474b5",
      "txHash": "0x363a2ba17855dd4da82ef7c74ae7202cdefe0d0b0e18f6c76a9105db0a80ffc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4190",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3238_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "CurrencyStaking",
            "label": "currency",
            "type": "t_contract(IERC20Upgradeable)559",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:9"
          },
          {
            "contract": "CurrencyStaking",
            "label": "stakedCurrencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:11"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)559": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Village)4190": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3238_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3238_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a040bfdda27d481341e9fea2fc5723cd69f99aaa80e417fed14cd5bf1bca6d48": {
      "address": "0x23e2DA1C6ED3C2074c71605232c020c3671b401e",
      "txHash": "0x8908d59d4d69258512aa71786d9368e9ebf06fe7ba9fa7eedc2dae3ac7113eb6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Staking",
            "label": "village",
            "type": "t_contract(Village)4190",
            "src": "..\\project:\\contracts\\Staking.sol:12"
          },
          {
            "contract": "Staking",
            "label": "stakes",
            "type": "t_mapping(t_uint256,t_struct(Stake)3238_storage)",
            "src": "..\\project:\\contracts\\Staking.sol:20"
          },
          {
            "contract": "Staking",
            "label": "currentStake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:21"
          },
          {
            "contract": "Staking",
            "label": "currentStakeStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:22"
          },
          {
            "contract": "Staking",
            "label": "currentStakeRewardClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Staking.sol:23"
          },
          {
            "contract": "Staking",
            "label": "unlockedTiers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Staking.sol:24"
          },
          {
            "contract": "CurrencyStaking",
            "label": "currency",
            "type": "t_contract(IERC20Upgradeable)559",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:9"
          },
          {
            "contract": "CurrencyStaking",
            "label": "stakedCurrencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CurrencyStaking.sol:11"
          },
          {
            "contract": "SkillStaking",
            "label": "kingStaking",
            "type": "t_contract(KingStaking)2447",
            "src": "..\\project:\\contracts\\SkillStaking.sol:11"
          },
          {
            "contract": "SkillStaking",
            "label": "kingVault",
            "type": "t_contract(KingVault)2629",
            "src": "..\\project:\\contracts\\SkillStaking.sol:12"
          },
          {
            "contract": "SkillStaking",
            "label": "kingRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\SkillStaking.sol:14"
          }
        ],
        "types": {
          "t_contract(KingStaking)2447": {
            "label": "contract KingStaking"
          },
          "t_contract(KingVault)2629": {
            "label": "contract KingVault"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)559": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Village)4190": {
            "label": "contract Village"
          },
          "t_mapping(t_uint256,t_struct(Stake)3238_storage)": {
            "label": "mapping(uint256 => struct Staking.Stake)"
          },
          "t_struct(Stake)3238_storage": {
            "label": "struct Staking.Stake",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requirement",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
